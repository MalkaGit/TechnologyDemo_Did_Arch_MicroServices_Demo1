lecture 11

goal: any (api or micro service) controller that needs to publish\subscribe to the message bus 
      will get from the IOC  IBusClient
      (true type:  RawRabbit.Instantiation.Disposable.BusClient)


    eg:     on ApiGQ
            public TestMessagingController(IBusClient BusClient)
            {
                this._BusClient = BusClient;
            }


1.	 documentation

	open https://rawrabbit.readthedocs.io/	==> 
	select vNext configuration file     that will open:		
    https://rawrabbit.readthedocs.io/en/master/configuration.html#vnext-configuration-file



2. appsettings.json: will hold settinfs to connect to the service bus (eg, rabbitMQ)

    do this for the Api gateway prject
    do this for all the microservices projects
    note:   these settings will be loaded into Common\Helpers\1RabbitMQ\RabbitMqOptions.cs

    

    phase1: find what we need in config file
    ===========================================================================================================
	2.1 open	https://rawrabbit.readthedocs.io/en/master/configuration.html#vnext-configuration-file
	
     "rabbitmq": 
    {
        "Username":                 "guest",
        "Password":                 "guest",
        "VirtualHost":              "/",
        "Port":                     5672,
        "Hostnames":                [ "localhost" ],
        "RequestTimeout":           "00:00:10",
        "PublishConfirmTimeout":    "00:00:01",
        "RecoveryInterval":         "00:00:10",
        "PersistentDeliveryMode":   true,
        "AutoCloseConnection":      true,
        "AutomaticRecovery":        true,
        "TopologyRecovery":         true,
        "Exchange": 
        {
                "Durable":          true,
                "AutoDelete":       true,
                "Type":             "Topic"
        },
        "Queue": 
        {
                "AutoDelete":       true,
                "Durable":          true,
                "Exclusive":        true
        }
    },


     phase2: 
    ===========================================================================================================

    2.2 for ant relevant projet, open the file appsettings.json and add the section above 






3. create helper method (AddRabbitMq) to init IOC 
   
    see:    X.Common\Helpers\1RabbitMQ\RabbitMqExtensions.cs 
            method: AddRabbitMq

    goal:
            IOC can call:
            public TestMessagingController(IBusClient BusClient)
            {
                this._BusClient = BusClient;
            }

            how ?   when StartUp.cs calls services.AddRabbitMq(Configuration); 
                    it init the IOC  so that 
                    IBusClient 
                    is mapped to 
                    an instance  of RawRabbit 
                            that uses the settings we defnied in config file

  


4. any app that needs to interact with the service bus, calls the  helper method (AddRabbitMq) to init IOC 

     StartUp.cs 

    public IConfiguration Configuration { get; }

        // This method gets called by the runtime. Use this method to add services to the container.
        public void ConfigureServices(IServiceCollection services)
        {
           ...

            services.AddRabbitMq(Configuration); //configure ocnnection to the service bus
            ....
        }
        
5. any controller that needs t ineracto wit hservice bus 
    saves a property IBusClient
    its constructor gets IBusclient and saves it as a propery

    \
    see"
      #region properties 


        /// <summary>
        /// we will use RabbitMQ Message bus 
        /// </summary>
        private readonly IBusClient _BusClient;

        #endregion

        #region Constructor


        /// <summary>
        /// IOC will send to the controller instance of the BusClient
        /// 
        /// see on staruup.Cs method  public void ConfigureServices(IServiceCollection services) calling  services.AddRabbitMq(Configuration); //establih aconnection and configure the service bus
        /// also see on Common RabbitMQExtentions method AddRabbitMq
        /// alos see RabbitMq settings oon the appsettings.json
        /// </summary>
        /// <param name="BusClient"></param>
        public TestMessagingController(IBusClient BusClient)
        {
            this._BusClient = BusClient;
        }

        #endregion "
